// Необходимо реализовать функцию, которая находит все различные пути между двумя точками,
// находящимися на прямоугольной сетке.
// Аргументом функции является объект с координатами точки, причем координаты точки
// представлены в виде натуральных чисел.
// Перемещаться разрешено только по горизонтали или вертикали вдоль
//  сетки таким образом, чтобы расстояние между точками не увеличивалось.
//  Цель задачи – вернуться к началу координат.
// Путем считается минимальное общее количество вертикальных и горизонтальных шагов.
// Два пути различны, если на этом пути есть хотя бы один шаг, который отличается,
// даже если большинство шагов одинаковы.
// Функция возвращает количество различных путей.

// Пример:
// {x: 0, y: 1} -> 1
// {x: 1, y: 1} -> 2
// {x: 2, y: 2} -> 6


// создадим функцию для расчета факториала
function factorial(n, result){
    result = result || 1;
    if(!n){
        return result;
    }else{
        return factorial(n-1, result*n);
    }
}

const getAmountPaths = (coords)=>{
const {x,y}= coords;
const factorialX = factorial(x)
const factorialY = factorial(y)
const factorialXY = factorial(x+y) //факториал от общего количества перемещений
return factorialXY/(factorialX*factorialY)
}

console.log(getAmountPaths({x: 0, y: 1}));
console.log(getAmountPaths({x: 1, y: 1}));
console.log(getAmountPaths({x: 2, y: 2}));
